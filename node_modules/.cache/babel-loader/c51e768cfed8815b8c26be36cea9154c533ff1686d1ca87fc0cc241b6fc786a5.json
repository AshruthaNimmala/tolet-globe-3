{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASHU NIMMALA\\\\OneDrive\\\\Desktop\\\\to-let-globe3\\\\blog-pages\\\\src\\\\components\\\\Pagination.js\";\nimport React from 'react';\nimport { Pagination as BootstrapPagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = ({\n  currentPage,\n  totalPages,\n  onPageChange\n}) => {\n  // Generate an array of page numbers to display\n  const getPageNumbers = () => {\n    const pageNumbers = [];\n    const maxPagesToShow = 5;\n    if (totalPages <= maxPagesToShow) {\n      // If total pages is less than or equal to maxPagesToShow, show all pages\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      // Always include first page\n      pageNumbers.push(1);\n\n      // Calculate start and end of the middle section\n      let start = Math.max(2, currentPage - 1);\n      let end = Math.min(totalPages - 1, currentPage + 1);\n\n      // Adjust if we're at the beginning or end\n      if (currentPage <= 2) {\n        end = 4;\n      } else if (currentPage >= totalPages - 1) {\n        start = totalPages - 3;\n      }\n\n      // Add ellipsis if needed\n      if (start > 2) {\n        pageNumbers.push('...');\n      }\n\n      // Add middle pages\n      for (let i = start; i <= end; i++) {\n        pageNumbers.push(i);\n      }\n\n      // Add ellipsis if needed\n      if (end < totalPages - 1) {\n        pageNumbers.push('...');\n      }\n\n      // Always include last page\n      pageNumbers.push(totalPages);\n    }\n    return pageNumbers;\n  };\n  return /*#__PURE__*/_jsxDEV(BootstrapPagination, {\n    className: \"justify-content-center my-4\",\n    children: [/*#__PURE__*/_jsxDEV(BootstrapPagination.First, {\n      onClick: () => onPageChange(1),\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapPagination.Prev, {\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), getPageNumbers().map((page, index) => page === '...' ? /*#__PURE__*/_jsxDEV(BootstrapPagination.Ellipsis, {\n      disabled: true\n    }, `ellipsis-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(BootstrapPagination.Item, {\n      active: page === currentPage,\n      onClick: () => onPageChange(page),\n      children: page\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(BootstrapPagination.Next, {\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapPagination.Last, {\n      onClick: () => onPageChange(totalPages),\n      disabled: currentPage === totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = Pagination;\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","Pagination","BootstrapPagination","jsxDEV","_jsxDEV","currentPage","totalPages","onPageChange","getPageNumbers","pageNumbers","maxPagesToShow","i","push","start","Math","max","end","min","className","children","First","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","Prev","map","page","index","Ellipsis","Item","active","Next","Last","_c","$RefreshReg$"],"sources":["C:/Users/ASHU NIMMALA/OneDrive/Desktop/to-let-globe3/blog-pages/src/components/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport { Pagination as BootstrapPagination } from 'react-bootstrap';\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  // Generate an array of page numbers to display\r\n  const getPageNumbers = () => {\r\n    const pageNumbers = [];\r\n    const maxPagesToShow = 5;\r\n    \r\n    if (totalPages <= maxPagesToShow) {\r\n      // If total pages is less than or equal to maxPagesToShow, show all pages\r\n      for (let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else {\r\n      // Always include first page\r\n      pageNumbers.push(1);\r\n      \r\n      // Calculate start and end of the middle section\r\n      let start = Math.max(2, currentPage - 1);\r\n      let end = Math.min(totalPages - 1, currentPage + 1);\r\n      \r\n      // Adjust if we're at the beginning or end\r\n      if (currentPage <= 2) {\r\n        end = 4;\r\n      } else if (currentPage >= totalPages - 1) {\r\n        start = totalPages - 3;\r\n      }\r\n      \r\n      // Add ellipsis if needed\r\n      if (start > 2) {\r\n        pageNumbers.push('...');\r\n      }\r\n      \r\n      // Add middle pages\r\n      for (let i = start; i <= end; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n      \r\n      // Add ellipsis if needed\r\n      if (end < totalPages - 1) {\r\n        pageNumbers.push('...');\r\n      }\r\n      \r\n      // Always include last page\r\n      pageNumbers.push(totalPages);\r\n    }\r\n    \r\n    return pageNumbers;\r\n  };\r\n\r\n  return (\r\n    <BootstrapPagination className=\"justify-content-center my-4\">\r\n      <BootstrapPagination.First \r\n        onClick={() => onPageChange(1)} \r\n        disabled={currentPage === 1}\r\n      />\r\n      <BootstrapPagination.Prev \r\n        onClick={() => onPageChange(currentPage - 1)} \r\n        disabled={currentPage === 1}\r\n      />\r\n      \r\n      {getPageNumbers().map((page, index) => (\r\n        page === '...' ? (\r\n          <BootstrapPagination.Ellipsis key={`ellipsis-${index}`} disabled />\r\n        ) : (\r\n          <BootstrapPagination.Item\r\n            key={page}\r\n            active={page === currentPage}\r\n            onClick={() => onPageChange(page)}\r\n          >\r\n            {page}\r\n          </BootstrapPagination.Item>\r\n        )\r\n      ))}\r\n      \r\n      <BootstrapPagination.Next \r\n        onClick={() => onPageChange(currentPage + 1)} \r\n        disabled={currentPage === totalPages}\r\n      />\r\n      <BootstrapPagination.Last \r\n        onClick={() => onPageChange(totalPages)} \r\n        disabled={currentPage === totalPages}\r\n      />\r\n    </BootstrapPagination>\r\n  );\r\n};\r\n\r\nexport default Pagination;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}